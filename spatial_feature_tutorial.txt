Install MapPy

1. Run MapPy executable file
2. Install all the dependencies
3. Edit/add the file paths into your advanced environment settings

Run Spatial Feature Calculation

1. Computation Notes and Instructions:
	a. MapPy is case sensitive.  
	b. It will not work if there are spaces in the file path or name. 
	c. Small dashes “-” in the file paths/names may confuse MapPy since the parameters are delineated by dashes.  Underscores work best. 
	d. Erdas Imagine (.IMG) or GeoTIFF (.TIF) file formats are preferred.

2. Parameters
	a. -i = input image with file path and extension
	b. -o = output folder destination
		i. Best if separated by city and year (separate folders called Nairobi_2010, Nairobi_2000, Kigali_2010, etc.)
	c. -blk = block size 
		i. Output resolution of each spatial feature layer
		ii. May only compute one block size at a time
		iii. We are aiming to get output resolutions closest to 15m, therefore we would like to use a block size of 8 (input resolution of 2.5m X block size 8 = 20m)
	d. -scs = scale sizes 
		i. Moving window size
		ii. Able to compute multiple scale sizes at a time
		iii. Must use three scales sizes starting at the block size, and increasing in octaves (block size = 8m, then scales must be 8, 16, and 32)
	e. -tr = spatial feature to compute 
		i. Able to compute multiple spatial features at a time (separate by comma)
		ii. Each spatial feature returns a different number of layers
			1. Mean = 1 layer for each block/scale
			2. Fourier = 2 layers for each block/scale
			3. Hog = 4 layers for each block/scale
			4. PanTex = 1 layer for each block/scale
			5. LBPM = 4 layers for each block/scale
			6. Gabor = 18 layers for each block/scale
			7. DMP = 1 layer for each block/scale
			8. LSR = 3 layers for each block/scale
			9. NDVI = 1 layer for each block/scale
	f. -bd = band number to compute spatial feature on 
		i. Panchromatic imagery only has one band, therefore band = 1
		ii. Multispectral imagery: use band number for NDVI
			1. NDVI: If band combo is RGB, -bd 1
			2. NDVI: If band combo is BGR, -bd 3
	g. -rgb2gray: only use this if you are processing Multispectral imagery, this replaces the -bd parameter
		i. RGB
		ii. BGR

3. Open Command Line from Start Menu
	a. Change to MapPy Features Directory
		i. > cd C:\Program Files (x86)\Python27\ArcGIS10.3\Lib\site-packages\mappy\features
	b. Run feature characteristics on a Panchromatic image using script feas.py
		i. > feas.py -i C:\Users\wb486933\IMAGERY\city_pan_image.img -o C:\Users\wb486933\Mappy_Features\city -blk 8 -scs 8,16,32 -tr mean -bd 1
	c. Run feature characteristics on a Multispectral image using script feas.py
		i. > feas.py -i C:\Users\wb486933\IMAGERY\city_multi_image.img -o C:\Users\wb486933\Mappy_Features\city -blk 8 -scs 8,16,32 -tr mean -rgb2gray BGR
	d. Compute NDVI layer outside of MapPy (for sensors with non RGB or BGR band combinations)
		i. SPOT 5 multispectral imagery is not supported in MapPy, due to the non-standard band combination. 
		ii. NDVI may be computed using the Image Analysis toolbar in ArcGIS 10.1.
		iii. NDVI should be exported at the scale size equivalent to the block size.

4. Example for Nairobi 2010 image
	a. > cd C:\Program Files (x86)\Python27\ArcGIS10.3\Lib\site-packages\mappy\features
	b. > feas.py -i C:\Users\wb486933\IMAGERY\orthorectified\Nairobi_2010_pan.img -o C:\Users\wb486933\Mappy_Features\Nairobi_2010 -blk 8 -scs 8,16,32 -tr mean,fourier,hog,pantex,lbpm,gabor,dmp,lsr -bd 1
		i. Should return 105 feature layers (1 block X 3 scales X 35 total feature layers = 105 layers)
	c. Open ArcGIS > Image Analysis Toolbar
		i. Select Nairobi_2010_multi.img > NDVI button
		ii. Export Data 
			1. Cell size: 20mx20m (because block size is outputting to 20m)
			2. Save in C:\Users\wb486933\Mappy_Features\Nairobi_2010\ndvi\Nairobi_2010_multi_ndvi.img

5. Repeat for each spatial feature and each city/year



Create Virtual Stack of Layers

1. Create a text file that has the full path, file name, and extension of each layer on separate lines


2. Open Python IDLE and build the VRT using GDAL
	a. > import subprocess
	b. > subprocess.call(["gdalbuildvrt", "-separate", "-input_file_list", "C:\\Users\\wb486933\\Mappy_Classification\\nairobi_2010\\nairobi_2010_file_list.txt", "C:\\Users\\wb486933\\Mappy_Classification\\nairobi_2010\\Nairobi_2010.vrt"])

3. Note: double slashes must be use instead of single slashes

4. Websites that explain building VRT
	a. http://www.gdal.org/gdalbuildvrt.html
	b. http://gis.stackexchange.com/questions/81788/gdalbuildvrt-error-when-using-in-python

Chunk Errors
	1. When opening feature layers with errors, they fail to build pyramids  
	2. Pixel values can be either zero or no data

